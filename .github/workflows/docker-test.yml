name: Run Tests with Docker Compose

on:
  workflow_dispatch:



jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Шаг 1: Проверка исходного кода
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || 'test2' }} # Берем ветку из input (по умолчанию main)

      # - name: Install locales and set language
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y locales
      #     sudo locale-gen ru_RU.UTF-8
      #     sudo update-locale LANG=ru_RU.UTF-8 LC_ALL=ru_RU.UTF-8
      # - name: Set environment variables for locale
      #   run: |
      #     export LANG=ru_RU.UTF-8
      #     export LC_ALL=ru_RU.UTF-8
      #     echo "LANG=$LANG"
      #     echo "LC_ALL=$LC_ALL"

      - name: Set up Docker Compose
        run: |
          sudo apt update
          sudo apt install gnupg2 apt-transport-https curl -y
          sudo curl -fsSL https://get.docker.com -o get-docker.sh
          sudo chmod +x get-docker.sh
          sudo ./get-docker.sh
          sudo service docker start

      # Шаг 3: Запуск docker-compose
      - name: Start services
        run: |
          docker compose up -d

      # Шаг 4: Ожидание перезапуска приложения
      - name: Wait for application to restart
        run: |
          echo "Waiting for application to restart..."
          sleep 5 # Подождать первоначальный запуск
          until [ "$(docker inspect --format '{{.State.Restarting}}' $(docker compose ps -q launcher))" != "true" ]; do
            echo "Waiting for restart..."
            sleep 2
          done

      # Шаг 5: Убедиться, что сервис работает
      - name: Check application is running
        run: |
          if [ "$(docker inspect --format '{{.State.Running}}' $(docker compose ps -q launcher))" != "true" ]; then
            echo "Application container is not running after restart."
            exit 1
          fi
      - name: Check locale inside container
        run: docker compose exec launcher locale
      # # Шаг 6: Запуск тестов
      # - name: Run tests
      #   run: |
      #     docker-compose exec launcher test/test.sh

      - name: Show logs
        # if: failure()
        run: docker compose logs --timestamps | sed -E 's/^([a-zA-Z0-9_-]+)  \| [0-9]{4}-[0-9]{2}-[0-9]{2}T([0-9]{2}:[0-9]{2}:[0-9]{2}\.[0-9]{3})[0-9]+Z /\1 | [\2] | /'
      # Шаг 7: Завершение работы контейнеров
      - name: Stop services
        if: always()
        run: |
          docker compose down
